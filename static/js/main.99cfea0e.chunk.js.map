{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["marked","setOptions","breaks","renderer","Renderer","initialText","App","useState","text","setText","className","for","class","id","rows","onChange","event","target","value","htmlText","dangerouslySetInnerHTML","__html","parseH","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sOAAe,I,4BCKfA,IAAOC,WAAW,CAChBC,QAAQ,IAEV,IAAMC,EAAW,IAAIH,IAAOI,SAItBC,EAAW,8ZAoEFC,MAxCf,WACE,MAAwBC,mBAASF,GAAjC,mBAAOG,EAAP,KAAaC,EAAb,KASA,OACE,qBAAKC,UAAU,MAAf,SACE,sBAAKA,UAAU,kCAAf,UACE,oBAAIA,UAAU,cAAd,gCACA,sBAAKA,UAAU,MAAf,UACE,sBAAKA,UAAU,QAAf,UACE,uBAAOC,IAAI,SAASC,MAAM,aAA1B,4BAGA,0BACEA,MAAM,qBACNC,GAAG,SACHC,KAAK,KACLC,SAAU,SAACC,GAAD,OAAWP,EAAQO,EAAMC,OAAOC,QAJ5C,SAMGb,OAGL,sBAAKK,UAAU,QAAf,UACE,uBAAOC,IAAI,UAAUC,MAAM,aAA3B,qBAGA,mBAAGF,UAAU,uBAAb,SA7BK,SAACF,GACd,IAAIW,EAAWnB,IAAOQ,EAAM,CAAEL,SAAUA,IACxC,OACE,qBAAKU,GAAG,UAAUO,wBAAyB,CAAEC,OAAQF,KA0BVG,CAAOd,iBC5DzCe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.99cfea0e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport React, { useState } from 'react';\nimport './App.scss';\nimport marked from 'marked';\n\nmarked.setOptions({\n  breaks: true,\n});\nconst renderer = new marked.Renderer();\n\n//a header (H1 size), a sub header (H2 size), a link, inline code, a code block, a list item, a blockquote, an image, and bolded text\n\nconst initialText = `\n# Header\n\n   ## Subheader \n\n   [a link](https://www.freecodecamp.org/learn/front-end-development-libraries/front-end-development-libraries-projects/build-a-markdown-previewer)\n   \\`inlinecode\\`\n\n   \\`\\`\\`\n   codeblock\n   codeblock\n   \\`\\`\\`\n\n  1. Ordered List\n  2. Ordered List\n\n  - unordered List\n  - unordered List\n  \n  \n  > a block quote\n\n  ![alt text](image.jpg)\n\n   \n   **bold text**\n   `;\n\nfunction App() {\n  const [text, setText] = useState(initialText);\n\n  const parseH = (text) => {\n    let htmlText = marked(text, { renderer: renderer });\n    return (\n      <div id='preview' dangerouslySetInnerHTML={{ __html: htmlText }}></div>\n    );\n  };\n\n  return (\n    <div className='App'>\n      <div className='container-fluid gradient-custom'>\n        <h2 className='text-center'>Markdown Previewer</h2>\n        <div className='row'>\n          <div className='col-6'>\n            <label for='editor' class='form-label'>\n              Enter Markdown\n            </label>\n            <textarea\n              class='input form-control'\n              id='editor'\n              rows='10'\n              onChange={(event) => setText(event.target.value)}\n            >\n              {initialText}\n            </textarea>\n          </div>\n          <div className='col-6'>\n            <label for='preview' class='form-label'>\n              Preview\n            </label>\n            <p className='preview form-control'>{parseH(text)}</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}